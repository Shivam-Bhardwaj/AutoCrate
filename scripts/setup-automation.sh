#!/bin/bash

# Setup Complete Automation for GitHub Repository
# This script configures all automation settings for hands-off development

echo "Setting up complete automation for hands-off development..."

# Configure git for automation
git config --global user.email "automation@github.com"
git config --global user.name "Automation Bot"

# Enable auto-merge for the repository
echo "Configuring repository settings..."
gh repo edit --enable-auto-merge --enable-issues --enable-wiki=false

# Set up branch protection rules for main branch
echo "Setting up branch protection..."
gh api repos/:owner/:repo/branches/main/protection \
  --method PUT \
  --field required_status_checks='{"strict":true,"contexts":["lint","test","build"]}' \
  --field enforce_admins=false \
  --field required_pull_request_reviews='{"dismiss_stale_reviews":true,"require_code_owner_reviews":false}' \
  --field restrictions=null \
  --field allow_force_pushes=false \
  --field allow_deletions=false \
  --field required_linear_history=false \
  --field allow_auto_merge=true

# Create labels for automation
echo "Creating automation labels..."
gh label create "auto-merge" --description "PR will be automatically merged" --color "0E8A16"
gh label create "auto-deploy" --description "Will trigger automatic deployment" --color "1D76DB"
gh label create "auto-fix" --description "Automated fixes applied" --color "FEF2C0"
gh label create "no-ci" --description "Skip CI checks" --color "D4C5F9"

# Set up GitHub Actions permissions
echo "Configuring GitHub Actions permissions..."
gh api repos/:owner/:repo/actions/permissions \
  --method PUT \
  --field enabled=true \
  --field allowed_actions=all

# Grant workflow permissions
gh api repos/:owner/:repo/actions/permissions/workflow \
  --method PUT \
  --field default_workflow_permissions=write \
  --field can_approve_pull_request_reviews=true

# Configure Dependabot for automatic dependency updates
echo "Setting up Dependabot..."
cat > .github/dependabot.yml << 'EOF'
version: 2
updates:
  - package-ecosystem: "npm"
    directory: "/"
    schedule:
      interval: "weekly"
    open-pull-requests-limit: 10
    labels:
      - "dependencies"
      - "auto-merge"
    assignees:
      - "Shivam-Bhardwaj"
    commit-message:
      prefix: "chore"
      include: "scope"
EOF

# Create PR template for automation
echo "Creating PR template..."
mkdir -p .github
cat > .github/pull_request_template.md << 'EOF'
## Automated PR

This PR was automatically generated by the hands-off workflow.

### Changes
- [ ] Code changes applied
- [ ] Tests updated/added
- [ ] Documentation updated
- [ ] Linting passed
- [ ] Type checking passed

### Auto-merge
This PR will be automatically merged once all checks pass.

### Deployment
Will automatically deploy to production after merge.

---
*Generated by automation script*
EOF

# Create issue templates
echo "Creating issue templates..."
mkdir -p .github/ISSUE_TEMPLATE
cat > .github/ISSUE_TEMPLATE/feature_request.md << 'EOF'
---
name: Feature request
about: Request a new feature (will be auto-implemented)
title: '[AUTO] '
labels: enhancement, auto-implement
assignees: ''
---

**Describe the feature**
A clear description of what you want to happen.

**Expected behavior**
How should this feature work?

**Additional context**
Any other context or screenshots about the feature request.

---
*This feature will be automatically implemented by the automation system.*
EOF

# Install pre-commit hooks for local development
echo "Installing pre-commit hooks..."
cat > .husky/pre-push << 'EOF'
#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Run automation checks before push
npm run auto:fix
EOF
chmod +x .husky/pre-push

# Create automation configuration file
echo "Creating automation config..."
cat > .automation.json << 'EOF'
{
  "version": "1.0.0",
  "automation": {
    "enabled": true,
    "autoMerge": true,
    "autoDeploy": true,
    "autoFix": true,
    "parallelBranches": true,
    "maxParallelPRs": 5
  },
  "workflows": {
    "onPush": ["lint", "test", "build", "deploy"],
    "onPR": ["lint", "test", "build"],
    "onMerge": ["deploy", "notify"]
  },
  "deployment": {
    "provider": "vercel",
    "autoRollback": true,
    "productionBranch": "main",
    "previewBranches": ["feature/*", "fix/*"]
  },
  "notifications": {
    "slack": false,
    "email": false,
    "github": true
  }
}
EOF

echo "Committing automation setup..."
git add .github/ .husky/ scripts/ .automation.json package.json
git commit -m "feat: complete hands-off automation setup

- Added automated workflows
- Configured branch protection
- Set up auto-merge and auto-deploy
- Created automation scripts
- Enabled parallel development
- Zero manual intervention required"

echo "Setup complete! Your repository is now fully automated."
echo ""
echo "How to use:"
echo "1. Make any change request to the AI"
echo "2. Changes will be automatically:"
echo "   - Implemented"
echo "   - Tested"
echo "   - Merged"
echo "   - Deployed"
echo "3. You'll receive notification when complete"
echo ""
echo "No manual intervention required!"